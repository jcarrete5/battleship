apply plugin: 'org.hidetake.ssh'

version = serverVersion
mainClassName = 'me.jcarrete.battleship.server.BattleshipServer'
applicationName = "${appBaseName}Server"

jar {
    archivesBaseName = applicationName
    manifest {
        attributes('Implementation-Title': applicationName,
                'Implementation-Version': version)
    }
}

ssh.settings {
    knownHosts = addHostKey(file("${System.properties['user.home']}/.ssh/known_hosts"))
    fileTransfer = 'scp'
}

remotes {
    jsonet {
        role 'appServer'
        host = 'jsonet.ddns.net'
        agent = true
        user = jsonetUser
        identity = file(jsonetIdentity)
        sudoPassword = jsonetSudoPassword
    }
}

task deploy(dependsOn: distTar) {
    description = 'Uploads the server distribution to the remote app server.'
    group = 'distribution'
    doLast {
        ssh.run {
            session(remotes.jsonet) {
                def source = "${applicationName}-${version}"
                def target = applicationName
                def uname = execute 'echo $USER'

                put from: new File(new File(buildDir, "distributions"), "${source}.tar"),
                        into: "/tmp"
                executeSudo "tar xf /tmp/${source}.tar -C /opt", pty: true
                execute "rm /tmp/${source}.tar"
                executeSudo "rm -rf /opt/${target}", pty: true
                executeSudo "mv /opt/$source /opt/$target", pty: true
                executeSudo "chown -R $uname:$uname /opt/$target", pty: true
            }
        }
    }
}
